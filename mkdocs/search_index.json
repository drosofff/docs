{
    "docs": [
        {
            "location": "/", 
            "text": "GitHub Documentation", 
            "title": "Home"
        }, 
        {
            "location": "/#github-documentation", 
            "text": "", 
            "title": "GitHub Documentation"
        }, 
        {
            "location": "/mkdocs_publishing/", 
            "text": "How to easily publish a report or documentation using mkdocs in GitHub\n\n\n\n\nCreate a new repository on your GitHub account. You can seed it with a README.txt file\n\n\nClone this repository locally\n\n\nLocally :\n\n\ncreate immediately a new branch \ngit branch gh-pages\n, checkout \ngit checkout gh-pages\n and push to the remote repository \npush origin gh-pages\n(this will create the new branch on the remote)\n\n\ngo back to the master branch\n \ngit checkout master\n\n\ncreate an mkdocs.yml file similar to this \nfile\n\n\ncreate a docs subdirectory where you .md markdown files will go\n\n\nadd, commit and push to the origin/master of the remote GitHub report\n\n\ninstall mkdocs \npip install mkdocs\n\n\nAnd build your html remote site in your gh-branch using the command\n\nmkdocs `mkdocs gh-deploy -c -m \"\ncommit message\n\"\n\n\nYou are done !\n\n\n\n\n\n\n\n\nAfterward\n\n\nYou just work locally in your master branch, commit and push your .md and .yml files, and using mkdocs gh-deploy to synchronize your remote gh-pages branch\n\n\nsee locally the web docs\n\n\nStill in your master branch, run \nmkdocs server\n and see locally your documentation with your web browser", 
            "title": "Create this documentation"
        }, 
        {
            "location": "/mkdocs_publishing/#how-to-easily-publish-a-report-or-documentation-using-mkdocs-in-github", 
            "text": "Create a new repository on your GitHub account. You can seed it with a README.txt file  Clone this repository locally  Locally :  create immediately a new branch  git branch gh-pages , checkout  git checkout gh-pages  and push to the remote repository  push origin gh-pages (this will create the new branch on the remote)  go back to the master branch   git checkout master  create an mkdocs.yml file similar to this  file  create a docs subdirectory where you .md markdown files will go  add, commit and push to the origin/master of the remote GitHub report  install mkdocs  pip install mkdocs  And build your html remote site in your gh-branch using the command mkdocs `mkdocs gh-deploy -c -m \" commit message \"  You are done !", 
            "title": "How to easily publish a report or documentation using mkdocs in GitHub"
        }, 
        {
            "location": "/mkdocs_publishing/#afterward", 
            "text": "You just work locally in your master branch, commit and push your .md and .yml files, and using mkdocs gh-deploy to synchronize your remote gh-pages branch", 
            "title": "Afterward"
        }, 
        {
            "location": "/mkdocs_publishing/#see-locally-the-web-docs", 
            "text": "Still in your master branch, run  mkdocs server  and see locally your documentation with your web browser", 
            "title": "see locally the web docs"
        }, 
        {
            "location": "/test_M2/", 
            "text": "Test (M2 level)\n\n\n\n\n\n\nIf it does not already exists, set up a GitHub account (https://github.com), and create a public repository for this test\n\n\nSet up a Local Galaxy server instance (galaxyproject.org) on your personal computer and log in to the server using a web browser. Provide a short memo of what you have done to complete this part 2. Thus, everyone can redo it. Please put this memo in your created public test repo.\n\n\nManipulate the Local server so that the home page of the local galaxy instance is changed (welcome message or anything). Clue: \"$GalaxyRoot/static/welcome.html\". Provide a screenshot of the change (in put the image in your public repo)\n\n\nWrite a python script that\n\n\ntakes in input any Fasta file\n\n\nreturns in a \"results\" file a) the number of sequences in the file b) a tabular list of sequences name \\t sequence length\n\n\nImportant: develop the script in your public GitHub repository from start (so that we can inspect commits)\n\n\n\n\n\n\n\n\nResults\n\n\n\n\nJust provide by mail the URL of the GitHub repository containing the following items\n\n\n\n\nthe memo (in 2)\n\n\nthe screenshot (in 3)\n\n\nThe python code (in 4)", 
            "title": "M2 test"
        }
    ]
}